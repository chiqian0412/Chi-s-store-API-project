const Product = require("../models/productmodel.js");
const urlName = (id) => ({ name: id });
// Refactor route controllers
// This controller is to get all products
exports.getAllProducts = async(req,res) => {
  try{
    //retrieve all the products from our database.
    const products = await Product.find();
    // send response.
       res.render('index',{products: products});
  }catch(error){
    res.status(500).json({
      status: "error",
      message: error,
    })
  }  
}

exports.createProductForm = async (req,res) =>{
  
  try{
    
    res.render('form'); 
  }catch(error){
    res.status(500).json({
      status: "error",
      message: error,
    })
  }   
}

// This controller is to create a new product
exports.createProduct = async(req, res) => {
  try{
    // const newProduct =await product.create(req.body);
    let createProductInfo = await Product.create(req.body);
    // await Learner.findOneAndUpdate(urlName(req.params.id), req.body);
    res.redirect('/product');
  }catch(error){
    res.status(500).json({
      status: "error",
      message: error,
    })
  }
}
// This controller is to get a single product
  exports.getSingleProduct = async(req, res) => {
    try{
      const product = await Product.findOne(urlName(req.params.id))
      res.render('view',{product: product});
    }catch(error){
      res.status(500).json({
        status: "error",
        message: error,
      })
    }
  }  
  exports.editProduct = async(req, res) => {
    try{
      const getProduct = await Product.findOne(urlName(req.params.id))

      res.render('editForm',{product: getProduct});
    }catch(error){
      res.status(500).json({
        status: "error",
        message: error,
      })
    }
  }
// This controller is to update product
  exports.updateProduct = async(req, res) => {
    try{
      const productId = urlName(req.params.id);
      const body = req.body;
      await Product.findOneAndUpdate(productId,body); 
      res.redirect(`/product/${body.name}`);
    }catch(error){
      res.status(500).json({
        status: "error",
        message: error,
      })
    }
  }
// This controller is to delete product
  exports.deleteProduct = async(req, res) => {
    try{
      await Product.remove(urlName(req.params.id));
      res.redirect('/product');
    }catch(error){
      res.status(500).json({
        status: "error",
        message: error,
      })
    }
  }

