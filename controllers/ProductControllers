const Product = require("../models/productmodel.js");

// Refactor route controllers
// This controller is to get all products
exports.getAllProducts = async(req,res) => {
  try{
    //retrieve all the products from our database.
    const products = await Product.find();
    // send response.
       res.render('index',{products: products});
  }catch(error){
    res.status(500).json({
      status: "error",
      message: error,
    })
  }  
}

exports.createProductForm = async (req,res) =>{
  const dbFilter = (id) => ({ firstName: id });
  try{
    let createProductInfo = await Product.findOne(dbFilter(req.params.id));
    res.render('form',{product: createProductInfo});
  }catch(error){
    res.status(500).json({
      status: "error",
      message: error,
    })
  }   
}
const dbFilter = (id) => ({ firstName: id });
const getUpdateLearner = async (req, resp) => {
    try {
        let result = await Learner.findOne(dbFilter(req.params.id));
        resp.render('updateLearner', { learner: result });
    } catch (e) {
        console.error('Error: ', e);
    }
}

// This controller is to create a new product
exports.createProduct = async(req, res) => {
  try{
    const newProduct =await product.create(req.body);
    res.status(201).json({
      status: "success",
      data: {
        newProduct: newProduct,
      },
    });
  }catch(error){
    res.status(500).json({
      status: "error",
      message: error,
    })
  }
}
// This controller is to get a single product
  exports.getSingleProduct = async(req, res) => {
    try{
      // const product = await Product.findByID(req.params.id)
      res.render('view',{product: Product[req.params.id]});
      // res.status(200).json({
      //     status: "success",
      //     data: {
      //     product: product,
      //     },
      // });
    }catch(error){
      res.status(500).json({
        status: "error",
        message: error,
      })
    }
  }  
  exports.editProduct = async(req, res) => {
    try{
      res.render('editForm',{products: Product[req.params.id]});
      // const updatedProduct = await Product.findByIdAndUpdate(req.params.id,req.body,{new: true});
      // res.status(201).json({
      //     status: "success",
      //     data: {
      //     updatedProduct: updatedProduct,
      //     },
      // });
    }catch(error){
      res.status(500).json({
        status: "error",
        message: error,
      })
    }
  }
// This controller is to update product
  exports.updateProduct = async(req, res) => {
    try{
      const updatedProduct = await Product.findByIdAndUpdate(req.params.id,req.body,{new: true});
      res.status(201).json({
          status: "success",
          data: {
          updatedProduct: updatedProduct,
          },
      });
    }catch(error){
      res.status(500).json({
        status: "error",
        message: error,
      })
    }
  }
// This controller is to delete product
  exports.deleteProduct = async(req, res) => {
    try{
      await Product.findByIdAndDelete(req.params.id);
      res.status(204).json({
          status: "success",
          data: {},
      });
    }catch(error){
      res.status(500).json({
        status: "error",
        message: error,
      })
    }
  }

